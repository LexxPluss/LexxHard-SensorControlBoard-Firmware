
/* auto-generated by gen_syscalls.py, don't edit */
#ifndef Z_INCLUDE_SYSCALLS_TIME_UNITS_H
#define Z_INCLUDE_SYSCALLS_TIME_UNITS_H


#ifndef _ASMLANGUAGE

#include <syscall_list.h>
#include <syscall.h>

#include <linker/sections.h>

#ifdef __cplusplus
extern "C" {
#endif

extern int z_impl_sys_clock_hw_cycles_per_sec_runtime_get(void);

__pinned_func
static inline int sys_clock_hw_cycles_per_sec_runtime_get(void)
{
#ifdef CONFIG_USERSPACE
	if (z_syscall_trap()) {
		return (int) arch_syscall_invoke0(K_SYSCALL_SYS_CLOCK_HW_CYCLES_PER_SEC_RUNTIME_GET);
	}
#endif
	compiler_barrier();
	return z_impl_sys_clock_hw_cycles_per_sec_runtime_get();
}


#ifdef __cplusplus
}
#endif

#endif
#endif /* include guard */
