
/* auto-generated by gen_syscalls.py, don't edit */
#ifndef Z_INCLUDE_SYSCALLS_EC_HOST_CMD_PERIPH_H
#define Z_INCLUDE_SYSCALLS_EC_HOST_CMD_PERIPH_H


#ifndef _ASMLANGUAGE

#include <syscall_list.h>
#include <syscall.h>

#include <linker/sections.h>

#ifdef __cplusplus
extern "C" {
#endif

extern int z_impl_ec_host_cmd_periph_init(const struct device * dev, struct ec_host_cmd_periph_rx_ctx * rx_ctx);

__pinned_func
static inline int ec_host_cmd_periph_init(const struct device * dev, struct ec_host_cmd_periph_rx_ctx * rx_ctx)
{
#ifdef CONFIG_USERSPACE
	if (z_syscall_trap()) {
		union { uintptr_t x; const struct device * val; } parm0 = { .val = dev };
		union { uintptr_t x; struct ec_host_cmd_periph_rx_ctx * val; } parm1 = { .val = rx_ctx };
		return (int) arch_syscall_invoke2(parm0.x, parm1.x, K_SYSCALL_EC_HOST_CMD_PERIPH_INIT);
	}
#endif
	compiler_barrier();
	return z_impl_ec_host_cmd_periph_init(dev, rx_ctx);
}


extern int z_impl_ec_host_cmd_periph_send(const struct device * dev, const struct ec_host_cmd_periph_tx_buf * tx_buf);

__pinned_func
static inline int ec_host_cmd_periph_send(const struct device * dev, const struct ec_host_cmd_periph_tx_buf * tx_buf)
{
#ifdef CONFIG_USERSPACE
	if (z_syscall_trap()) {
		union { uintptr_t x; const struct device * val; } parm0 = { .val = dev };
		union { uintptr_t x; const struct ec_host_cmd_periph_tx_buf * val; } parm1 = { .val = tx_buf };
		return (int) arch_syscall_invoke2(parm0.x, parm1.x, K_SYSCALL_EC_HOST_CMD_PERIPH_SEND);
	}
#endif
	compiler_barrier();
	return z_impl_ec_host_cmd_periph_send(dev, tx_buf);
}


#ifdef __cplusplus
}
#endif

#endif
#endif /* include guard */
