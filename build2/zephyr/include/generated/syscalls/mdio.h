
/* auto-generated by gen_syscalls.py, don't edit */
#ifndef Z_INCLUDE_SYSCALLS_MDIO_H
#define Z_INCLUDE_SYSCALLS_MDIO_H


#ifndef _ASMLANGUAGE

#include <syscall_list.h>
#include <syscall.h>

#include <linker/sections.h>

#ifdef __cplusplus
extern "C" {
#endif

extern void z_impl_mdio_bus_enable(const struct device * dev);

__pinned_func
static inline void mdio_bus_enable(const struct device * dev)
{
#ifdef CONFIG_USERSPACE
	if (z_syscall_trap()) {
		union { uintptr_t x; const struct device * val; } parm0 = { .val = dev };
		(void) arch_syscall_invoke1(parm0.x, K_SYSCALL_MDIO_BUS_ENABLE);
		return;
	}
#endif
	compiler_barrier();
	z_impl_mdio_bus_enable(dev);
}


extern void z_impl_mdio_bus_disable(const struct device * dev);

__pinned_func
static inline void mdio_bus_disable(const struct device * dev)
{
#ifdef CONFIG_USERSPACE
	if (z_syscall_trap()) {
		union { uintptr_t x; const struct device * val; } parm0 = { .val = dev };
		(void) arch_syscall_invoke1(parm0.x, K_SYSCALL_MDIO_BUS_DISABLE);
		return;
	}
#endif
	compiler_barrier();
	z_impl_mdio_bus_disable(dev);
}


extern int z_impl_mdio_read(const struct device * dev, uint8_t prtad, uint8_t devad, uint16_t * data);

__pinned_func
static inline int mdio_read(const struct device * dev, uint8_t prtad, uint8_t devad, uint16_t * data)
{
#ifdef CONFIG_USERSPACE
	if (z_syscall_trap()) {
		union { uintptr_t x; const struct device * val; } parm0 = { .val = dev };
		union { uintptr_t x; uint8_t val; } parm1 = { .val = prtad };
		union { uintptr_t x; uint8_t val; } parm2 = { .val = devad };
		union { uintptr_t x; uint16_t * val; } parm3 = { .val = data };
		return (int) arch_syscall_invoke4(parm0.x, parm1.x, parm2.x, parm3.x, K_SYSCALL_MDIO_READ);
	}
#endif
	compiler_barrier();
	return z_impl_mdio_read(dev, prtad, devad, data);
}


extern int z_impl_mdio_write(const struct device * dev, uint8_t prtad, uint8_t devad, uint16_t data);

__pinned_func
static inline int mdio_write(const struct device * dev, uint8_t prtad, uint8_t devad, uint16_t data)
{
#ifdef CONFIG_USERSPACE
	if (z_syscall_trap()) {
		union { uintptr_t x; const struct device * val; } parm0 = { .val = dev };
		union { uintptr_t x; uint8_t val; } parm1 = { .val = prtad };
		union { uintptr_t x; uint8_t val; } parm2 = { .val = devad };
		union { uintptr_t x; uint16_t val; } parm3 = { .val = data };
		return (int) arch_syscall_invoke4(parm0.x, parm1.x, parm2.x, parm3.x, K_SYSCALL_MDIO_WRITE);
	}
#endif
	compiler_barrier();
	return z_impl_mdio_write(dev, prtad, devad, data);
}


#ifdef __cplusplus
}
#endif

#endif
#endif /* include guard */
