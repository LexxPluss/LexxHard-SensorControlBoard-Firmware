/*
 * Copyright (c) 2022, LexxPluss Inc.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/dts-v1/;
#include <mem.h>
#include <dt-bindings/led/led.h>
#include <st/f7/stm32f769.dtsi>
#include <st/f7/stm32f769b(g-i)tx-pinctrl.dtsi>

/ {
	model = "LexxPluss Main Control Unit board V2";
	compatible = "st,stm32f769bg-lexxpluss";

	chosen {
		zephyr,code-partition = &slot0_partition;
		zephyr,console = &usart1;
		zephyr,shell-uart = &usart1;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,dtcm = &dtcm;
		zephyr,can-primary = &can2;
	};

	soc {
		flash-controller@40023c00 {
			flash0: flash@8000000 {
				reg = <0x08000000 DT_SIZE_K(1024)>;
			};
		};

		can2: can@40006800 {
			compatible = "st,stm32-can";
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <0x40006800 0x400>;
			interrupts = <63 0>, <64 0>, <65 0>, <66 0>;
			interrupt-names = "TX", "RX0", "RX1", "SCE";
			clocks = <&rcc STM32_CLOCK_BUS_APB1 0x06000000>;
			master-can-reg = <0x40006400>;
			status = "disabled";
			label = "CAN_2";
		};
	};

	uss0: mb1604-0 {
		compatible = "maxbotix,maxbotix";
		label = "MB1604_0";
		trig-gpios = <&gpioe 3 GPIO_ACTIVE_HIGH>;
		echo-gpios = <&gpioe 4 GPIO_ACTIVE_HIGH>;
		status = "okay";
	};

	uss1: mb1604-1 {
		compatible = "maxbotix,maxbotix";
		label = "MB1604_1";
		trig-gpios = <&gpiob 7 GPIO_ACTIVE_HIGH>;
		echo-gpios = <&gpiob 6 GPIO_ACTIVE_HIGH>;
		status = "okay";
	};

	uss2: mb1604-2 {
		compatible = "maxbotix,maxbotix";
		label = "MB1604_2";
		trig-gpios = <&gpioi 8 GPIO_ACTIVE_HIGH>;
		echo-gpios = <&gpioc 13 GPIO_ACTIVE_HIGH>;
		status = "okay";
	};

	uss3: mb1604-3 {
		compatible = "maxbotix,maxbotix";
		label = "MB1604_3";
		trig-gpios = <&gpiob 8 GPIO_ACTIVE_HIGH>;
		echo-gpios = <&gpiob 9 GPIO_ACTIVE_HIGH>;
		status = "okay";
	};

	uss4: mb1604-4 {
		compatible = "maxbotix,maxbotix";
		label = "MB1604_4";
		trig-gpios = <&gpioh 8 GPIO_ACTIVE_HIGH>;
		echo-gpios = <&gpioh 7 GPIO_ACTIVE_HIGH>;
		status = "okay";
	};

	dbg_leds {
		compatible = "gpio-dbg_leds";
		dbg_led1: dbgled1 {
			gpios = <&gpiog 7 GPIO_ACTIVE_HIGH>;
		};
		dbg_led2: dbg_led2 {
			gpios = <&gpiog 6 GPIO_ACTIVE_HIGH>;
		};
		dbg_led3: dbg_led3 {
			gpios = <&gpiog 5 GPIO_ACTIVE_HIGH>;
		};
		dbg_led4: dbg_led4 {
			gpios = <&gpiog 4 GPIO_ACTIVE_HIGH>;
		};
	};

	actuator_fails {
		compatible = "gpio-actuator_fail";
		act_c_fail: act_c_fail {
			gpios = <&gpiod 10 GPIO_ACTIVE_HIGH>;
		};
		act_l_fail: act_l_fail {
			gpios = <&gpiog 8 GPIO_ACTIVE_HIGH>;
		};
		act_r_fail: act_r_fail {
			gpios = <&gpioe 10 GPIO_ACTIVE_HIGH>;
		};
	};

	powers {
		compatible = "gpio-power";
		v24: v24 {
			gpios = <&gpioc 15 GPIO_ACTIVE_HIGH>;
		};
		v_autocharge: v_autocharge {
			gpios = <&gpiod 0 GPIO_ACTIVE_HIGH>;
		};
		v_wheel: v_wheel {
			gpios = <&gpiod 1 GPIO_ACTIVE_HIGH>;
		};
		v_peripheral: v_peripheral {
			gpios = <&gpiod 2 GPIO_ACTIVE_HIGH>;
		};
	};

	fans {
		compatible = "gpio-fan";
		fan1: fan1 {
			gpios = <&gpioc 10 GPIO_ACTIVE_HIGH>;
		};
		fan2: fan2 {
			gpios = <&gpioc 11 GPIO_ACTIVE_HIGH>;
		};
		fan3: fan3 {
			gpios = <&gpiob 14 GPIO_ACTIVE_HIGH>;
		};
		fan4: fan4 {
			gpios = <&gpiob 15 GPIO_ACTIVE_HIGH>;
		};
	};

	pgvs {
		compatible = "gpio-pgv";
		pgv_en: pgv_en {
			gpios = <&gpioh 2 GPIO_ACTIVE_HIGH>;
		};
		pgv_en_n: pgv_en_n {
			gpios = <&gpioa 2 GPIO_ACTIVE_HIGH>;
		};
	};

	wheel_en {
		compatible = "gpio-wheel_en";
		wheel_en: wheel_en {
			gpios = <&gpiok 3 GPIO_ACTIVE_HIGH>;
		};
	};
};

&clk_hse {
	hse-bypass;
	clock-frequency = <DT_FREQ_M(8)>;
	status = "okay";
};

&pll {
	div-m = <8>;
	mul-n = <432>;
	div-p = <2>;
	div-q = <9>;
	clocks = <&clk_hse>;
	status = "okay";
};

&rcc {
	clocks = <&pll>;
	clock-frequency = <DT_FREQ_M(216)>;
	ahb-prescaler = <1>;
	apb1-prescaler = <4>;
	apb2-prescaler = <2>;
};

&usart1 {
	pinctrl-0 = <&usart1_tx_pa9 &usart1_rx_pa10>;
	current-speed = <115200>;
	status = "okay";
};

&usart2 {
	pinctrl-0 = <&usart2_tx_pd5 &usart2_rx_pd6>;
	current-speed = <115200>;
	status = "okay";
};

&uart4 {
	pinctrl-0 = <&uart4_tx_pa0 &uart4_rx_pa1>;
	current-speed = <115200>;
	status = "okay";
};

&usart6 {
	pinctrl-0 = <&usart6_tx_pg14 &usart6_rx_pg9 &usart6_cts_pg13 &usart6_rts_pg12>;
	current-speed = <115200>;
	hw-flow-control;
	status = "okay";
};

&spi5 {
	pinctrl-0 = <&spi5_sck_pf7 &spi5_miso_pf8 &spi5_mosi_pf9>;
	cs-gpios = <&gpiof 6 GPIO_ACTIVE_LOW>;
	status = "okay";
	imu0: iim42652@0 {
		compatible = "invensense,iim42652";
		spi-max-frequency = <24000000>;
		reg = <0>;
		label = "IIM42652";
		int-gpios = <&gpiof 2 GPIO_ACTIVE_HIGH>;
	};
};

&spi4 {
	pinctrl-0 = <&spi4_sck_pe2 &spi4_miso_pe5 &spi4_mosi_pe6>;
	status = "okay";
	led_strip0: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";
		label = "WS2812_0";
		reg = <0>;
		spi-max-frequency = <8000000>;
		chain-length = <36>;
		spi-one-frame = <0x7c>;
		spi-zero-frame = <0x60>;
		color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
	};
};

&spi1 {
	pinctrl-0 = <&spi1_sck_pg11 &spi1_miso_pb4 &spi1_mosi_pb5>;
	status = "okay";
	led_strip1: ws2812@1 {
		compatible = "worldsemi,ws2812-spi";
		label = "WS2812_1";
		reg = <1>;
		spi-max-frequency = <8000000>;
		chain-length = <36>;
		spi-one-frame = <0x7c>;
		spi-zero-frame = <0x60>;
		color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
	};
};

&spi6 {
	pinctrl-0 = <&spi6_sck_pa5 &spi6_miso_pa6 &spi6_mosi_pa7>;
	status = "okay";
	led_strip2: ws2812@2 {
		compatible = "worldsemi,ws2812-spi";
		label = "WS2812_2";
		reg = <2>;
		spi-max-frequency = <8000000>;
		chain-length = <25>;
		spi-one-frame = <0x7c>;
		spi-zero-frame = <0x60>;
		color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
	};
};

&spi2 {
	pinctrl-0 = <&spi2_sck_pi1 &spi2_miso_pi2 &spi2_mosi_pi3>;
	status = "okay";
	led_strip3: ws2812@3 {
		compatible = "worldsemi,ws2812-spi";
		label = "WS2812_3";
		reg = <3>;
		spi-max-frequency = <8000000>;
		chain-length = <25>;
		spi-one-frame = <0x7c>;
		spi-zero-frame = <0x60>;
		color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
	};
};

&adc1 {
	pinctrl-0 = <&adc1_in8_pb0 &adc1_in9_pb1 &adc1_in10_pc0 &adc1_in11_pc1 &adc1_in12_pc2 &adc1_in13_pc3>;
	status = "okay";
};

&adc3 {
	pinctrl-0 = <&adc3_in8_pf10>;
	status = "okay";
};

&timers1 {
	status = "okay";
	pwm1: pwm {
		status = "okay";
		pinctrl-0 = <&tim1_ch1_pe9 &tim1_ch2_pe11>;
		st,prescaler = <0>;
	};
};

&timers2 {
	status = "okay";
	pwm2: pwm {
		status = "okay";
		pinctrl-0 = <&tim2_ch3_pb10 &tim2_ch4_pb11>;
		st,prescaler = <0>;
	};
};

&timers3 {
	status = "okay";
	pwm3: pwm {
		status = "okay";
		pinctrl-0 = <&tim3_ch1_pc6 &tim3_ch2_pc7>;
		st,prescaler = <0>;
	};
};

&timers4 {
	status = "okay";
	pwm4: pwm {
		status = "okay";
		pinctrl-0 = <&tim4_ch1_pd12 &tim4_ch2_pd13>;
		st,prescaler = <0>;
	};
};

&timers5 {
	status = "okay";
	pwm5: pwm {
		status = "okay";
		pinctrl-0 = <&tim5_ch1_ph10 &tim5_ch2_ph11>;
		st,prescaler = <0>;
	};
};

&timers8 {
	status = "okay";
	pwm8: pwm {
		status = "okay";
		pinctrl-0 = <&tim8_ch1_pi5 &tim8_ch2_pi6>;
		st,prescaler = <0>;
	};
};

&can1 {
	pinctrl-0 = <&can1_rx_ph14 &can1_tx_ph13>;
	pinctrl-names = "default";
	bus-speed = <500000>;
	status = "okay";
};

&can2 {
	pinctrl-0 = <&can2_rx_pb12 &can2_tx_pb13>;
	bus-speed = <500000>;
	sjw = <1>;
	prop-seg = <0>;
	phase-seg1 = <5>;
	phase-seg2 = <6>;
	status = "okay";
};

&i2c2 {
	pinctrl-0 = <&i2c2_sda_pf0 &i2c2_scl_pf1>;
	status = "okay";
};

&i2c4 {
	pinctrl-0 = <&i2c4_scl_pf14 &i2c4_sda_pf15>;
	status = "okay";
};

&sdmmc1 {
	pinctrl-0 = <&sdmmc1_d0_pc8 &sdmmc1_d1_pc9 &sdmmc1_d2_pc10 &sdmmc1_d3_pc11 &sdmmc1_ck_pc12 &sdmmc1_cmd_pd2>;
	status = "okay";
};

&flash0 {
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;
		boot_partition: partition@0 {
			label = "mcuboot";
			reg = <0x0 0x00020000>;
		};
		storage_partition: partition@20000 {
			label = "storage";
			reg = <0x00020000 0x00020000>;
		};
		slot0_partition: partition@40000 {
			label = "image-0";
			reg = <0x00040000 0x00040000>;
		};
		slot1_partition: partition@80000 {
			label = "image-1";
			reg = <0x00080000 0x00040000>;
		};
		scratch_partition: partition@C0000 {
			label = "image-scratch";
			reg = <0x000C0000 0x00040000>;
		};
	};
};
